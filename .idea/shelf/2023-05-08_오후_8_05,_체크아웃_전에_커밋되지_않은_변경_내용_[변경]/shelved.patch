Index: app/src/main/java/com/example/myapplication/ui/slideshow/SlideshowFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.ui.slideshow;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.example.myapplication.CsCheck;\r\nimport com.example.myapplication.R;\r\nimport com.example.myapplication.databinding.FragmentSlideshowBinding;\r\n\r\npublic class SlideshowFragment extends Fragment {\r\n\r\n    private FragmentSlideshowBinding binding;\r\n    Button Tocs;\r\n    private Context cscontext;\r\n\r\n    @Override\r\n    public void onAttach(Context context) {\r\n        super.onAttach(context);\r\n        cscontext = context;\r\n    }\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             ViewGroup container, Bundle savedInstanceState) {\r\n        SlideshowViewModel slideshowViewModel =\r\n                new ViewModelProvider(this).get(SlideshowViewModel.class);\r\n\r\n        binding = FragmentSlideshowBinding.inflate(inflater, container, false);\r\n        View root = binding.getRoot();\r\n\r\n        Tocs = root.findViewById(R.id.ToCs);\r\n\r\n        Tocs.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(cscontext.getApplicationContext(), CsCheck.class);\r\n                startActivity(intent);\r\n                //((CsCheck)cscontext).CsCheck();\r\n            }\r\n        });\r\n\r\n        return root;\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        binding = null;\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n\r\n        // Hide the system UI while the fragment is resumed\r\n        View decorView = getActivity().getWindow().getDecorView();\r\n        decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_FULLSCREEN);\r\n    }\r\n\r\n    @Override\r\n    public void onPause() {\r\n        super.onPause();\r\n\r\n        // Show the system UI again while the fragment is paused\r\n        View decorView = getActivity().getWindow().getDecorView();\r\n        decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_VISIBLE);\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/ui/slideshow/SlideshowFragment.java b/app/src/main/java/com/example/myapplication/ui/slideshow/SlideshowFragment.java
--- a/app/src/main/java/com/example/myapplication/ui/slideshow/SlideshowFragment.java	(revision 8d7149810ef8d4d8fa69a94e738dc6e2918c895c)
+++ b/app/src/main/java/com/example/myapplication/ui/slideshow/SlideshowFragment.java	(date 1683370705648)
@@ -36,43 +36,53 @@
         binding = FragmentSlideshowBinding.inflate(inflater, container, false);
         View root = binding.getRoot();
 
-        Tocs = root.findViewById(R.id.ToCs);
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 
-        Tocs.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Intent intent = new Intent(cscontext.getApplicationContext(), CsCheck.class);
-                startActivity(intent);
-                //((CsCheck)cscontext).CsCheck();
-            }
-        });
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 
         return root;
     }
 
-    @Override
-    public void onDestroyView() {
-        super.onDestroyView();
-        binding = null;
-    }
+
+
+
 
-    @Override
-    public void onResume() {
-        super.onResume();
 
-        // Hide the system UI while the fragment is resumed
-        View decorView = getActivity().getWindow().getDecorView();
-        decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_FULLSCREEN);
-    }
 
-    @Override
-    public void onPause() {
-        super.onPause();
 
-        // Show the system UI again while the fragment is paused
-        View decorView = getActivity().getWindow().getDecorView();
-        decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_VISIBLE);
-    }
+
+
+
+
 
 
 
Index: app/src/main/java/com/example/myapplication/CsCheck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\nimport android.Manifest;\r\nimport android.app.AlertDialog;\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.Color;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.LocationManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\n\r\n\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\n\r\npublic class CsCheck extends AppCompatActivity {\r\n    long mNow;\r\n    Date mDate;\r\n    SimpleDateFormat mFormat = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\r\n\r\n    TextView mTextView;\r\n    Button mRefreshBtn;\r\n    Button CSstart;\r\n\r\n    Button button1;\r\n    Button csstart;\r\n    TextView longitudevie;\r\n    TextView latitudevie;\r\n    TextView Con;\r\n    TextView nlongitudevie;\r\n    TextView nlatitudevie;\r\n    TextView name;\r\n\r\n\r\n    private static final String PRIMAY_CHANNEL_ID = \"primary_notification_channel\";\r\n\r\n    private NotificationManager mNotificationManager;\r\n\r\n    private static final int NOTIFICATION_ID=0;\r\n\r\n\r\n    int alram_val = 0;\r\n\r\n    RadioGroup radioGroup;\r\n\r\n    RadioButton GSRadioButton;\r\n    RadioButton STRadioButton;\r\n    double platitude =0;\r\n    double plongtitude = 0;\r\n\r\n    String csCheck;\r\n\r\n    //private GpsTracker gpsTracker;\r\n\r\n    private static final int GPS_ENABLE_REQUEST_CODE = 2001;\r\n    private static final int PERMISSIONS_REQUEST_CODE = 100;\r\n    String[] REQUIRED_PERMISSIONS  = {Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION};\r\n\r\n\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_cscheck);\r\n\r\n        radibtn();\r\n        createNotificationChannel();\r\n\r\n        Button tolist = (Button) findViewById(R.id.toList);\r\n        tolist.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View view){\r\n                Intent intent = new Intent(getApplicationContext(),ListOpener.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void createNotificationChannel(){\r\n        mNotificationManager = (NotificationManager)\r\n                getSystemService(NOTIFICATION_SERVICE);\r\n\r\n        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O){\r\n            NotificationChannel nfcc = new NotificationChannel(PRIMAY_CHANNEL_ID,\"Test\",mNotificationManager.IMPORTANCE_HIGH);\r\n            nfcc.enableLights(true);\r\n            nfcc.setLightColor(Color.RED);\r\n            nfcc.enableVibration(true);\r\n            nfcc.setDescription(\"NOTIFICATION\");\r\n\r\n            mNotificationManager.createNotificationChannel(nfcc);\r\n\r\n        }\r\n\r\n    }\r\n    private NotificationCompat.Builder getNotificationBuilder(){\r\n        Intent notify = new Intent(this,CsCheck.class);\r\n       // notify.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_SINGLE_TOP);\r\n        PendingIntent notifyPending = PendingIntent.getActivity\r\n                (this,NOTIFICATION_ID,notify,PendingIntent.FLAG_MUTABLE|PendingIntent.FLAG_UPDATE_CURRENT);\r\n        NotificationCompat.Builder notifyBuilder = new NotificationCompat.Builder(this,PRIMAY_CHANNEL_ID)\r\n                .setContentTitle(\"출석알람!\")\r\n                .setContentText(\"출석하세요!\")\r\n                .setSmallIcon(R.drawable.clock)\r\n                .setContentIntent(notifyPending)\r\n                .setAutoCancel(true);\r\n        return notifyBuilder;\r\n    }\r\n    public void sendNotification(){\r\n        NotificationCompat.Builder notifyBuilder = getNotificationBuilder();\r\n        mNotificationManager.notify(NOTIFICATION_ID,notifyBuilder.build());\r\n    }\r\n\r\n\r\n\r\n\r\n    public void radibtn() {\r\n        GSRadioButton = (RadioButton) findViewById(R.id.GSradibtn);\r\n        STRadioButton = (RadioButton) findViewById(R.id.STDradibtn);\r\n       /* GSRadioButton.setOnClickListener(radioButtonClickListener);\r\n        STRadioButton.setOnClickListener(radioButtonClickListener); */\r\n        radioGroup = (RadioGroup) findViewById(R.id.radioGroup);\r\n        radioGroup.setOnCheckedChangeListener(radioGroupButtonChangeListener);\r\n\r\n        button1 = (Button) findViewById(R.id.refreshBtn);\r\n        csstart = (Button) findViewById(R.id.CSstart);\r\n\r\n\r\n\r\n    }\r\n\r\n        RadioGroup.OnCheckedChangeListener radioGroupButtonChangeListener = new RadioGroup.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(RadioGroup radioGroup, int i) {\r\n                if (i == R.id.STDradibtn) {\r\n                    if(alram_val==1)\r\n                    {sendNotification();}\r\n                    csstart.setEnabled(false);\r\n\r\n                    stbtns();\r\n\r\n\r\n                } else if (i == R.id.GSradibtn) {\r\n                    csstart.setEnabled(true);\r\n                    gsbtns();\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n    public void gsbtns(){\r\n        button1.setVisibility(View.INVISIBLE);\r\n        csstart.setVisibility(View.VISIBLE);\r\n\r\n        btnchange();\r\n    }\r\n    public void stbtns(){\r\n        button1.setVisibility(View.VISIBLE);\r\n        csstart.setVisibility(View.INVISIBLE);\r\n        btns();\r\n    }\r\n\r\n    // 타이머 TimeRest에 전달된 시간만큼 타이머 작동\r\n    //onTick은 초마다 실행할 명령어\r\n    //onfinish로 출석체크 버튼 비활성화\r\n\r\n    class TimerRest extends CountDownTimer {\r\n\r\n        public TimerRest(long millisInFuture, long countDownInterval){\r\n            super(millisInFuture,countDownInterval);\r\n        }\r\n        public void onTick(long millisInFuture){\r\n\r\n        }\r\n        public void onFinish(){\r\n            button1.setEnabled(false);\r\n            onResume();\r\n\r\n        }\r\n    }\r\n\r\n    //학생 좌표받기\r\n    public class gpsresult{\r\n        GpsTracker gpsTracker = new GpsTracker(CsCheck.this);\r\n        double lat = gpsTracker.getLatitude();\r\n        double lon = gpsTracker.getLongitude();\r\n\r\n\r\n\r\n    }\r\n    //교수 좌표받기\r\n    public class pgpsresult{\r\n        GpsTracker gpsTracker = new GpsTracker(CsCheck.this);\r\n        double lat = gpsTracker.getPRLatitude();\r\n        double lon = gpsTracker.getPRLongitude();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //출석체크 버튼 클릭시 발생 이벤트 / 교수의 좌표를 받아 전달하고 타이머 5분 시작\r\n    public void btnchange(){\r\n\r\n        Button CSstart = (Button) findViewById(R.id.CSstart);\r\n        //5분 타이머\r\n        TimerRest timer = new TimerRest(300000,1000);\r\n        // prime pr = new prime();\r\n        pgpsresult pgp = new pgpsresult();\r\n        CSstart.setOnClickListener(new View.OnClickListener()\r\n\r\n        {\r\n            @Override\r\n            public void onClick(View arg0)\r\n            {\r\n                double prlatitude =0;\r\n                double prlongitude =0;\r\n\r\n\r\n\r\n                prlatitude = pgp.lat;\r\n                prlongitude = pgp.lon;\r\n                platitude = prlatitude;\r\n                plongtitude = prlongitude;\r\n                button1.setEnabled(true);\r\n                timer.start();\r\n                alram_val=1;\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    //User 리스트에 db값 전달\r\n\r\n    public List<User> userList ;\r\n\r\n    public void initLoadDB() {\r\n\r\n        DataAdapter mDbHelper = new DataAdapter(getApplicationContext());\r\n        mDbHelper.createDatabase();\r\n        mDbHelper.open();\r\n\r\n        // db에 있는 값들을 model을 적용해서 넣는다.\r\n        userList = mDbHelper.getTableData();\r\n\r\n        // db 닫기\r\n        mDbHelper.close();\r\n    }\r\n\r\n//    public void initLoad() {\r\n//\r\n//        DataBaseHelper dbhelper =new DataBaseHelper(this);\r\n//        SQLiteDatabase db = dbhelper.getReadableDatabase();\r\n//        Cursor cursor = db.rawQuery(\"SELECT * FROM student\",null);\r\n//        CSLIST cslist = new CSLIST();\r\n//\r\n//        String va1=\"\";\r\n//        String va2=\"\";\r\n//        String va3=\"\";\r\n//        String va4=\"\";\r\n//        while(cursor.moveToNext()){\r\n//            cslist.addItemToList(cursor.getString(1),cursor.getString(0),cursor.getString(6),cursor.getString(7));\r\n////            va1 = cursor.getString(1);\r\n////            va2 = cursor.getString(0);\r\n////            va3 = cursor.getString(6);\r\n////            va4= cursor.getString(7);\r\n//        }\r\n////        Toast.makeText(getApplicationContext(),va3,Toast.LENGTH_LONG).show();\r\n//\r\n//\r\n//        dbhelper.close();\r\n//        db.close();\r\n//    }\r\n\r\n\r\n\r\n    //    public class prime{\r\n//\r\n//        double platitude =0;\r\n//        double plongtitude = 0;\r\n//    }\r\n    public class dist{\r\n\r\n        double dislat = 0;\r\n        double dislon = 0;\r\n    }\r\n    public void btns(){\r\n        mTextView = (TextView) findViewById(R.id.textView);\r\n\r\n        mRefreshBtn = (Button) findViewById(R.id.refreshBtn);\r\n\r\n        //bind listener\r\n        mRefreshBtn.setOnClickListener(this::onClick);\r\n\r\n\r\n\r\n\r\n        longitudevie = (TextView)findViewById(R.id.longitudevie);\r\n        latitudevie = (TextView)findViewById(R.id.latitudevie);\r\n\r\n        Con = (TextView)findViewById(R.id.Con);\r\n\r\n        nlongitudevie = (TextView)findViewById(R.id.nlongitudevie);\r\n        nlatitudevie = (TextView)findViewById(R.id.nlatitudevie);\r\n\r\n        if (!checkLocationServicesStatus()) {\r\n\r\n            showDialogForLocationServiceSetting();\r\n        }else {\r\n\r\n            checkRunTimePermission();\r\n        }\r\n\r\n\r\n        //  prime pr = new prime();\r\n        dist di = new dist();\r\n        gpsresult gp = new gpsresult();\r\n\r\n\r\n\r\n\r\n\r\n        TextView textview_latitude = (TextView)findViewById(R.id.latitudevie);\r\n        TextView textview_longitude = (TextView)findViewById(R.id.longitudevie);\r\n\r\n\r\n        Button ShowLocationButton = (Button) findViewById(R.id.refreshBtn);\r\n        ShowLocationButton.setOnClickListener(new View.OnClickListener()\r\n        {\r\n            @Override\r\n            public void onClick(View arg0)\r\n            {\r\n                gpsresult gp = new gpsresult();\r\n\r\n                double latitude=0;\r\n                double longitude=0;\r\n\r\n\r\n                latitude = gp.lat;\r\n                longitude = gp.lon;\r\n\r\n                if((Math.abs(latitude)>=Math.abs(platitude)))\r\n                    di.dislat = Math.abs(latitude) - Math.abs(platitude);\r\n                else\r\n                    di.dislat = Math.abs(platitude) - Math.abs(latitude);\r\n\r\n                if((Math.abs(longitude)>=Math.abs(plongtitude)))\r\n                    di.dislon = Math.abs(longitude) - Math.abs(plongtitude);\r\n                else\r\n                    di.dislon = Math.abs(plongtitude) - Math.abs(longitude);\r\n\r\n                String dilon = String.format(\"%.7f\",di.dislon);\r\n                String dilat = String.format(\"%.7f\", di.dislat);\r\n\r\n\r\n                mTextView.setText(getTime());\r\n               textview_latitude.setText(String.valueOf(latitude));\r\n               textview_longitude.setText(String.valueOf(longitude));\r\n\r\n\r\n                nlongitudevie.setText(dilon);\r\n               nlatitudevie.setText(dilat);\r\n\r\n//                nlongitudevie.setText(String.valueOf(di.dislon));\r\n//                nlatitudevie.setText(String.valueOf(di.dislat));\r\n                if(Math.abs(di.dislat) <= 0.0002 && Math.abs(di.dislon) <=0.002)\r\n                    csCheck = \"O\";\r\n                else\r\n                    csCheck = \"X\";\r\n\r\n\r\n\r\n                Con.setText(String.valueOf(csCheck));\r\n               // initLoadDB();\r\n                getVal();\r\n                //initLoad();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    //데이터 베이스 값 읽기\r\n    String val;\r\n    void getVal(){\r\n\r\n        //Dbhelper의 읽기모드 객체를 가져와 SQLiteDatabase에 담아 사용준비\r\n        DataBaseHelper helper = new DataBaseHelper(this);\r\n        SQLiteDatabase database = helper.getReadableDatabase();\r\n\r\n//        try\r\n//        {\r\n//           helper.DoCopyDB();\r\n//        }\r\n//        catch (IOException mIOException)\r\n//        {\r\n//            Log.e(TAG, mIOException.toString() + \"  UnableToCreateDatabase\");\r\n//            throw new Error(\"UnableToCreateDatabase\");\r\n//        }\r\n\r\n        String SName = User.getUsername();\r\n        //Cursor라는 그릇에 목록을 담아주기\r\n        Cursor cursor = database.rawQuery(\"SELECT * FROM student\" ,null);\r\n\r\n         helper.insertData(getTime(),csCheck,SName);\r\n//        helper.insertTimeData(getTime(),\"김경호\");\r\n//        helper.insertCSData(csCheck,\"김경호\");\r\n//        if(cursor != null && cursor.moveToFirst())\r\n        //목록의 개수만큼 순회하여 adapter에 있는 list배열에 add\r\n        while(cursor.moveToNext()){\r\n            //num 행은 가장 첫번째에 있으니 0번이 되고, name은 1번\r\n\r\n            val = cursor.getString(7);\r\n//            if(isInserted==true)\r\n//\r\n\r\n        }\r\n\r\n\r\n      //  boolean isInserted =\r\n\r\n\r\n\r\n                name=(TextView)findViewById(R.id.name);\r\n        name.setText(String.valueOf(val));\r\n        cursor.close();\r\n        helper.close();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    String getTime(){\r\n        mNow = System.currentTimeMillis();\r\n        mDate = new Date(mNow);\r\n        SimpleDateFormat mFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n        return mFormat.format(mDate);\r\n    }\r\n\r\n    public void onClick(View v) {\r\n        switch (v.getId()){\r\n            case R.id.refreshBtn:\r\n                mTextView.setText(getTime());\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n//    void MKList(){\r\n//        ArrayList<User> user;\r\n//\r\n//    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public void onRequestPermissionsResult(int permsRequestCode,\r\n                                           @NonNull String[] permissions,\r\n                                           @NonNull int[] grandResults) {\r\n\r\n        super.onRequestPermissionsResult(permsRequestCode, permissions, grandResults);\r\n        if (permsRequestCode == PERMISSIONS_REQUEST_CODE && grandResults.length == REQUIRED_PERMISSIONS.length) {\r\n\r\n            // 요청 코드가 PERMISSIONS_REQUEST_CODE 이고, 요청한 퍼미션 개수만큼 수신되었다면\r\n\r\n            boolean check_result = true;\r\n\r\n\r\n            // 모든 퍼미션을 허용했는지 체크합니다.\r\n\r\n            for (int result : grandResults) {\r\n                if (result != PackageManager.PERMISSION_GRANTED) {\r\n                    check_result = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n            if (check_result) {\r\n\r\n                //위치 값을 가져올 수 있음\r\n                ;\r\n            } else {\r\n                // 거부한 퍼미션이 있다면 앱을 사용할 수 없는 이유를 설명해주고 앱을 종료합니다.2 가지 경우가 있습니다.\r\n\r\n                if (ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[0])\r\n                        || ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[1])) {\r\n\r\n                    Toast.makeText(CsCheck.this, \"퍼미션이 거부되었습니다. 앱을 다시 실행하여 퍼미션을 허용해주세요.\", Toast.LENGTH_LONG).show();\r\n                    finish();\r\n\r\n\r\n                } else {\r\n\r\n                    Toast.makeText(CsCheck.this, \"퍼미션이 거부되었습니다. 설정(앱 정보)에서 퍼미션을 허용해야 합니다. \", Toast.LENGTH_LONG).show();\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    void checkRunTimePermission(){\r\n\r\n        //런타임 퍼미션 처리\r\n        // 1. 위치 퍼미션을 가지고 있는지 체크합니다.\r\n        int hasFineLocationPermission = ContextCompat.checkSelfPermission(CsCheck.this,\r\n                Manifest.permission.ACCESS_FINE_LOCATION);\r\n        int hasCoarseLocationPermission = ContextCompat.checkSelfPermission(CsCheck.this,\r\n                Manifest.permission.ACCESS_COARSE_LOCATION);\r\n\r\n\r\n        if (hasFineLocationPermission == PackageManager.PERMISSION_GRANTED &&\r\n                hasCoarseLocationPermission == PackageManager.PERMISSION_GRANTED) {\r\n\r\n            // 2. 이미 퍼미션을 가지고 있다면\r\n            // ( 안드로이드 6.0 이하 버전은 런타임 퍼미션이 필요없기 때문에 이미 허용된 걸로 인식합니다.)\r\n\r\n\r\n            // 3.  위치 값을 가져올 수 있음\r\n\r\n\r\n\r\n        } else {  //2. 퍼미션 요청을 허용한 적이 없다면 퍼미션 요청이 필요합니다. 2가지 경우(3-1, 4-1)가 있습니다.\r\n\r\n            // 3-1. 사용자가 퍼미션 거부를 한 적이 있는 경우에는\r\n            if (ActivityCompat.shouldShowRequestPermissionRationale(CsCheck.this, REQUIRED_PERMISSIONS[0])) {\r\n\r\n                // 3-2. 요청을 진행하기 전에 사용자가에게 퍼미션이 필요한 이유를 설명해줄 필요가 있습니다.\r\n                Toast.makeText(CsCheck.this, \"이 앱을 실행하려면 위치 접근 권한이 필요합니다.\", Toast.LENGTH_LONG).show();\r\n                // 3-3. 사용자게에 퍼미션 요청을 합니다. 요청 결과는 onRequestPermissionResult에서 수신됩니다.\r\n                ActivityCompat.requestPermissions(CsCheck.this, REQUIRED_PERMISSIONS,\r\n                        PERMISSIONS_REQUEST_CODE);\r\n\r\n\r\n            } else {\r\n                // 4-1. 사용자가 퍼미션 거부를 한 적이 없는 경우에는 퍼미션 요청을 바로 합니다.\r\n                // 요청 결과는 onRequestPermissionResult에서 수신됩니다.\r\n                ActivityCompat.requestPermissions(CsCheck.this, REQUIRED_PERMISSIONS,\r\n                        PERMISSIONS_REQUEST_CODE);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public String getCurrentAddress( double latitude, double longitude) {\r\n\r\n        //지오코더... GPS를 주소로 변환\r\n        Geocoder geocoder = new Geocoder(this, Locale.getDefault());\r\n\r\n        List<Address> addresses;\r\n\r\n        try {\r\n\r\n            addresses = geocoder.getFromLocation(\r\n                    latitude,\r\n                    longitude,\r\n                    7);\r\n        } catch (IOException ioException) {\r\n            //네트워크 문제\r\n            Toast.makeText(this, \"지오코더 서비스 사용불가\", Toast.LENGTH_LONG).show();\r\n            return \"지오코더 서비스 사용불가\";\r\n        } catch (IllegalArgumentException illegalArgumentException) {\r\n            Toast.makeText(this, \"잘못된 GPS 좌표\", Toast.LENGTH_LONG).show();\r\n            return \"잘못된 GPS 좌표\";\r\n\r\n        }\r\n\r\n\r\n\r\n        if (addresses == null || addresses.size() == 0) {\r\n            Toast.makeText(this, \"주소 미발견\", Toast.LENGTH_LONG).show();\r\n            return \"주소 미발견\";\r\n\r\n        }\r\n\r\n        Address address = addresses.get(0);\r\n        return address.getAddressLine(0).toString()+\"\\n\";\r\n\r\n    }\r\n\r\n\r\n    //여기부터는 GPS 활성화를 위한 메소드들\r\n    private void showDialogForLocationServiceSetting() {\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(CsCheck.this);\r\n        builder.setTitle(\"위치 서비스 비활성화\");\r\n        builder.setMessage(\"앱을 사용하기 위해서는 위치 서비스가 필요합니다.\\n\"\r\n                + \"위치 설정을 수정하실래요?\");\r\n        builder.setCancelable(true);\r\n        builder.setPositiveButton(\"설정\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int id) {\r\n                Intent callGPSSettingIntent\r\n                        = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);\r\n                startActivityForResult(callGPSSettingIntent, GPS_ENABLE_REQUEST_CODE);\r\n\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"취소\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int id) {\r\n\r\n                dialog.cancel();\r\n            }\r\n        });\r\n        builder.create().show();\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        switch (requestCode) {\r\n\r\n            case GPS_ENABLE_REQUEST_CODE:\r\n\r\n                //사용자가 GPS 활성 시켰는지 검사\r\n                if (checkLocationServicesStatus()) {\r\n                    if (checkLocationServicesStatus()) {\r\n\r\n                        Log.d(\"@@@\", \"onActivityResult : GPS 활성화 되있음\");\r\n                        checkRunTimePermission();\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    public boolean checkLocationServicesStatus() {\r\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)\r\n                || locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/CsCheck.java b/app/src/main/java/com/example/myapplication/CsCheck.java
--- a/app/src/main/java/com/example/myapplication/CsCheck.java	(revision 8d7149810ef8d4d8fa69a94e738dc6e2918c895c)
+++ b/app/src/main/java/com/example/myapplication/CsCheck.java	(date 1683370944635)
@@ -92,6 +92,8 @@
         radibtn();
         createNotificationChannel();
 
+
+
         Button tolist = (Button) findViewById(R.id.toList);
         tolist.setOnClickListener(new View.OnClickListener(){
             public void onClick(View view){
Index: app/src/main/java/com/example/myapplication/CalendarActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.CalendarView;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.navigation.ui.AppBarConfiguration;\r\nimport androidx.navigation.ui.NavigationUI;\r\n\r\nimport com.example.myapplication.R;\r\nimport com.example.myapplication.databinding.ActivityCalendarBinding;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.android.material.snackbar.Snackbar;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\n\r\npublic class CalendarActivity extends AppCompatActivity\r\n{\r\n    public String readDay = null;\r\n    public String str = null;\r\n    public CalendarView calendarView;\r\n    public Button cha_Btn, del_Btn, save_Btn;\r\n    public TextView diaryTextView, textView2, textView3;\r\n    public EditText contextEditText;\r\n\r\n\r\n    public static final int PERMISSION_PROFESSOR = 1;\r\n    public static final int PERMISSION_STUDENT = 0;\r\n\r\n    // 권한 변수 추가\r\n    public int permission = 0;\r\n\r\n    private ActivityCalendarBinding binding;\r\n    private AppBarConfiguration mAppBarConfiguration;\r\n\r\n    String firstUser = User.getUsername();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        initNavigationMenu();\r\n\r\n        calendarView = findViewById(R.id.calendarView);\r\n        diaryTextView = findViewById(R.id.diaryTextView);\r\n        save_Btn = findViewById(R.id.save_Btn);\r\n        del_Btn = findViewById(R.id.del_Btn);\r\n        cha_Btn = findViewById(R.id.cha_Btn);\r\n        textView2 = findViewById(R.id.textView2);\r\n        textView3 = findViewById(R.id.textView3);\r\n        contextEditText = findViewById(R.id.contextEditText);\r\n        calendarView.setOnDateChangeListener(new CalendarView.OnDateChangeListener()\r\n        {\r\n            @Override\r\n            public void onSelectedDayChange(@NonNull CalendarView view, int year, int month, int dayOfMonth)\r\n            {\r\n                diaryTextView.setVisibility(View.VISIBLE);\r\n                save_Btn.setVisibility(View.VISIBLE);\r\n                contextEditText.setVisibility(View.VISIBLE);\r\n                textView2.setVisibility(View.INVISIBLE);\r\n                cha_Btn.setVisibility(View.INVISIBLE);\r\n                del_Btn.setVisibility(View.INVISIBLE);\r\n                diaryTextView.setText(String.format(\"%d / %d / %d\", year, month + 1, dayOfMonth));\r\n                contextEditText.setText(\"\");\r\n                checkDay(year, month, dayOfMonth);\r\n\r\n                if (permission == 1) {\r\n                    diaryTextView.setEnabled(true);\r\n                    save_Btn.setEnabled(true);\r\n                    del_Btn.setEnabled(true);\r\n                    cha_Btn.setEnabled(true);\r\n                } else {\r\n                    diaryTextView.setEnabled(false);\r\n                    save_Btn.setEnabled(false);\r\n                    del_Btn.setEnabled(false);\r\n                    cha_Btn.setEnabled(false);\r\n                } }\r\n        });\r\n        save_Btn.setOnClickListener(new View.OnClickListener()\r\n        {\r\n            @Override\r\n            public void onClick(View view)\r\n            {\r\n                saveDiary(readDay);\r\n                str = contextEditText.getText().toString();\r\n                textView2.setText(str);\r\n                save_Btn.setVisibility(View.INVISIBLE);\r\n                cha_Btn.setVisibility(View.VISIBLE);\r\n                del_Btn.setVisibility(View.VISIBLE);\r\n                contextEditText.setVisibility(View.INVISIBLE);\r\n                textView2.setVisibility(View.VISIBLE);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public void checkDay(int cYear, int cMonth, int cDay)\r\n    {\r\n        readDay = \"\" + cYear + \"-\" + (cMonth + 1) + \"\" + \"-\" + cDay + \".txt\";\r\n        FileInputStream fis;\r\n\r\n        try\r\n        {\r\n            fis = openFileInput(readDay);\r\n\r\n            byte[] fileData = new byte[fis.available()];\r\n            fis.read(fileData);\r\n            fis.close();\r\n\r\n            str = new String(fileData);\r\n\r\n            contextEditText.setVisibility(View.INVISIBLE);\r\n            textView2.setVisibility(View.VISIBLE);\r\n            textView2.setText(str);\r\n\r\n            save_Btn.setVisibility(View.INVISIBLE);\r\n            cha_Btn.setVisibility(View.VISIBLE);\r\n            del_Btn.setVisibility(View.VISIBLE);\r\n\r\n            cha_Btn.setOnClickListener(new View.OnClickListener()\r\n            {\r\n                @Override\r\n                public void onClick(View view)\r\n                {\r\n                    contextEditText.setVisibility(View.VISIBLE);\r\n                    textView2.setVisibility(View.INVISIBLE);\r\n                    contextEditText.setText(str);\r\n\r\n                    save_Btn.setVisibility(View.VISIBLE);\r\n                    cha_Btn.setVisibility(View.INVISIBLE);\r\n                    del_Btn.setVisibility(View.INVISIBLE);\r\n                    textView2.setText(contextEditText.getText());\r\n                }\r\n\r\n            });\r\n            del_Btn.setOnClickListener(new View.OnClickListener()\r\n            {\r\n                @Override\r\n                public void onClick(View view)\r\n                {\r\n                    textView2.setVisibility(View.INVISIBLE);\r\n                    contextEditText.setText(\"\");\r\n                    contextEditText.setVisibility(View.VISIBLE);\r\n                    save_Btn.setVisibility(View.VISIBLE);\r\n                    cha_Btn.setVisibility(View.INVISIBLE);\r\n                    del_Btn.setVisibility(View.INVISIBLE);\r\n                    removeDiary(readDay);\r\n                }\r\n            });\r\n            if (textView2.getText() == null)\r\n            {\r\n                textView2.setVisibility(View.INVISIBLE);\r\n                diaryTextView.setVisibility(View.VISIBLE);\r\n                save_Btn.setVisibility(View.VISIBLE);\r\n                cha_Btn.setVisibility(View.INVISIBLE);\r\n                del_Btn.setVisibility(View.INVISIBLE);\r\n                contextEditText.setVisibility(View.VISIBLE);\r\n            }\r\n\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"WrongConstant\")\r\n    public void removeDiary(String readDay)\r\n    {\r\n        FileOutputStream fos;\r\n        try\r\n        {\r\n            fos = openFileOutput(readDay, MODE_NO_LOCALIZED_COLLATORS);\r\n            String content = \"\";\r\n            fos.write((content).getBytes());\r\n            fos.close();\r\n\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"WrongConstant\")\r\n    public void saveDiary(String readDay)\r\n    {\r\n        FileOutputStream fos;\r\n        try\r\n        {\r\n            fos = openFileOutput(readDay, MODE_NO_LOCALIZED_COLLATORS);\r\n            String content = contextEditText.getText().toString();\r\n            fos.write((content).getBytes());\r\n            fos.close();\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void initNavigationMenu() {\r\n        //사이드 메뉴바\r\n        binding = ActivityCalendarBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        setSupportActionBar(binding.appBar.toolbar);\r\n        binding.appBar.fab.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                        .setAction(\"Action\", null).show();\r\n            }\r\n        });\r\n        DrawerLayout drawerLayout = binding.drawerLayout;\r\n        NavigationView navigationView = binding.navView;\r\n\r\n        mAppBarConfiguration = new AppBarConfiguration.Builder(\r\n                R.id.nav_home, R.id.menu_item2, R.id.menu_item3)\r\n                .setOpenableLayout(drawerLayout)\r\n                .build();\r\n        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment_content_main);\r\n        NavigationUI.setupActionBarWithNavController(this, navController, mAppBarConfiguration);\r\n        NavigationUI.setupWithNavController(navigationView, navController);\r\n        navigationView.setNavigationItemSelectedListener(\r\n                new NavigationView.OnNavigationItemSelectedListener() {\r\n                    public MenuItem item;\r\n                    public boolean onNavigationItemSelected(MenuItem item) {\r\n                        this.item = item;\r\n                        int id = item.getItemId();\r\n\r\n                        switch (id) {\r\n                            case R.id.nav_home:\r\n                                // nav_home Fragment로 이동\r\n                                navController.navigate(R.id.nav_home);\r\n                                break;\r\n                            case R.id.menu_item2:\r\n                                // menu_item2 Fragment로 이동\r\n                                navController.navigate(R.id.menu_item2);\r\n                                break;\r\n                            case R.id.menu_item3:\r\n                                // menu_item3 Fragment로 이동\r\n                                navController.navigate(R.id.menu_item3);\r\n                                break;\r\n                            case R.id.menu_item4:\r\n                                // menu_item4 Fragment로 이동\r\n                                navController.navigate(R.id.menu_item4);\r\n                                break;\r\n                        }\r\n\r\n                        // Navigation Drawer 닫기\r\n                        drawerLayout.closeDrawer(GravityCompat.START);\r\n                        return true;\r\n                    }\r\n                }\r\n        );\r\n        View headerView = navigationView.getHeaderView(0);\r\n        TextView headerTextView = headerView.findViewById(R.id.header_text);\r\n        headerTextView.setText(firstUser);\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        getMenuInflater().inflate(R.menu.main, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment_content_main);\r\n        return NavigationUI.navigateUp(navController, mAppBarConfiguration)\r\n                || super.onSupportNavigateUp();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/CalendarActivity.java b/app/src/main/java/com/example/myapplication/CalendarActivity.java
--- a/app/src/main/java/com/example/myapplication/CalendarActivity.java	(revision 8d7149810ef8d4d8fa69a94e738dc6e2918c895c)
+++ b/app/src/main/java/com/example/myapplication/CalendarActivity.java	(date 1683370705636)
@@ -218,7 +218,11 @@
         }
     }
 
-    private void initNavigationMenu() {
+    public void rungo(){
+        initNavigationMenu();
+    }
+
+    public void initNavigationMenu() {
         //사이드 메뉴바
         binding = ActivityCalendarBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());
